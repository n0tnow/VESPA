# Generated by Django 4.2 on 2025-07-20 22:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=20, unique=True, verbose_name='Müşteri ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad Soyad')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefon')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta')),
                ('address', models.TextField(verbose_name='Adres')),
                ('plate_number', models.CharField(blank=True, max_length=20, verbose_name='Plaka')),
                ('registration_date', models.DateField(verbose_name='Kayıt Tarihi')),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Toplam Harcama')),
                ('services_count', models.IntegerField(default=0, verbose_name='Servis Sayısı')),
                ('last_service', models.DateField(blank=True, null=True, verbose_name='Son Servis')),
                ('status', models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('vip', 'VIP')], default='active', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Müşteri',
                'verbose_name_plural': 'Müşteriler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Hareket Türü')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Hareket Türü',
                'verbose_name_plural': 'Hareket Türleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.CharField(max_length=50, unique=True, verbose_name='Parça ID')),
                ('name', models.CharField(max_length=200, verbose_name='Parça Adı')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fiyat')),
                ('current_stock', models.IntegerField(default=0, verbose_name='Mevcut Stok')),
                ('min_stock', models.IntegerField(default=0, verbose_name='Minimum Stok')),
                ('max_stock', models.IntegerField(default=0, verbose_name='Maksimum Stok')),
                ('url', models.URLField(blank=True, verbose_name='Ürün URL')),
                ('main_image', models.URLField(blank=True, verbose_name='Ana Resim')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Parça',
                'verbose_name_plural': 'Parçalar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PartCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Parça Kategorisi',
                'verbose_name_plural': 'Parça Kategorileri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=20, unique=True, verbose_name='Servis ID')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tahmini Maliyet')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Gerçek Maliyet')),
                ('start_date', models.DateTimeField(verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.customer', verbose_name='Müşteri')),
            ],
            options={
                'verbose_name': 'Servis',
                'verbose_name_plural': 'Servisler',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Durum')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Servis Durumu',
                'verbose_name_plural': 'Servis Durumları',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Servis Türü')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Servis Türü',
                'verbose_name_plural': 'Servis Türleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tedarikçi Adı')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='İletişim Kişisi')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-posta')),
                ('address', models.TextField(blank=True, verbose_name='Adres')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
            options={
                'verbose_name': 'Tedarikçi',
                'verbose_name_plural': 'Tedarikçiler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VespaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Model Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('year', models.IntegerField(verbose_name='Yıl')),
                ('engine_size', models.CharField(max_length=50, verbose_name='Motor Hacmi')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fiyat')),
                ('image_url', models.URLField(blank=True, verbose_name='Resim URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Vespa Modeli',
                'verbose_name_plural': 'Vespa Modelleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Departman')),
                ('is_technician', models.BooleanField(default=False, verbose_name='Teknisyen')),
                ('can_manage_stock', models.BooleanField(default=False, verbose_name='Stok Yönetimi')),
                ('can_manage_customers', models.BooleanField(default=False, verbose_name='Müşteri Yönetimi')),
                ('can_manage_services', models.BooleanField(default=False, verbose_name='Servis Yönetimi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Profili',
                'verbose_name_plural': 'Kullanıcı Profilleri',
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Miktar')),
                ('previous_stock', models.IntegerField(verbose_name='Önceki Stok')),
                ('new_stock', models.IntegerField(verbose_name='Yeni Stok')),
                ('reason', models.CharField(max_length=200, verbose_name='Sebep')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='Referans')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Tarih')),
                ('movement_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.movementtype', verbose_name='Hareket Türü')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.part', verbose_name='Parça')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Stok Hareketi',
                'verbose_name_plural': 'Stok Hareketleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServicePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Miktar')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Birim Fiyat')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Toplam Fiyat')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.part', verbose_name='Parça')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.service', verbose_name='Servis')),
            ],
            options={
                'verbose_name': 'Servis Parçası',
                'verbose_name_plural': 'Servis Parçaları',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.servicetype', verbose_name='Servis Türü'),
        ),
        migrations.AddField(
            model_name='service',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.servicestatus', verbose_name='Durum'),
        ),
        migrations.AddField(
            model_name='service',
            name='technician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Teknisyen'),
        ),
        migrations.AddField(
            model_name='part',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.partcategory', verbose_name='Kategori'),
        ),
        migrations.AddField(
            model_name='part',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.supplier', verbose_name='Tedarikçi'),
        ),
        migrations.AddField(
            model_name='customer',
            name='vespa_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.vespamodel', verbose_name='Vespa Modeli'),
        ),
        migrations.CreateModel(
            name='ModelPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True, verbose_name='Zorunlu')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.part', verbose_name='Parça')),
                ('vespa_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vespamodel', verbose_name='Vespa Modeli')),
            ],
            options={
                'verbose_name': 'Model Parçası',
                'verbose_name_plural': 'Model Parçaları',
                'unique_together': {('vespa_model', 'part')},
            },
        ),
    ]
